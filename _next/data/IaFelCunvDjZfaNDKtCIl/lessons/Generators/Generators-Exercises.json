{"pageProps":{"post":{"attributes":{"title":"Generators Exercises","description":"Generators Exercises"},"html":"<h3 id=\"exercise-1-create-a-generator-that-generates-a-fibonacci-sequence-up-to-a-given-limit\">Exercise 1: Create a generator that generates a Fibonacci sequence up to a given limit.</h3>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">fibonacci_generator</span>(<span class=\"hljs-params\">limit</span>):\n    a, b = <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">while</span> a &lt; limit:\n        <span class=\"hljs-keyword\">yield</span> a\n        a, b = b, a + b\n\n<span class=\"hljs-comment\"># Using the generator to print Fibonacci numbers up to a limit</span>\nlimit = <span class=\"hljs-number\">50</span>\nfib_gen = fibonacci_generator(limit)\n<span class=\"hljs-keyword\">for</span> num <span class=\"hljs-keyword\">in</span> fib_gen:\n    <span class=\"hljs-built_in\">print</span>(num)\n</code></pre>\n<h3 id=\"exercise-2-create-a-generator-that-generates-even-numbers-up-to-a-given-limit\">Exercise 2: Create a generator that generates even numbers up to a given limit.</h3>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">even_number_generator</span>(<span class=\"hljs-params\">limit</span>):\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">0</span>, limit, <span class=\"hljs-number\">2</span>):\n        <span class=\"hljs-keyword\">yield</span> i\n\n<span class=\"hljs-comment\"># Using the generator to print even numbers up to a limit</span>\nlimit = <span class=\"hljs-number\">20</span>\neven_gen = even_number_generator(limit)\n<span class=\"hljs-keyword\">for</span> num <span class=\"hljs-keyword\">in</span> even_gen:\n    <span class=\"hljs-built_in\">print</span>(num)\n</code></pre>\n<h3 id=\"exercise-3-create-a-generator-that-generates-the-squares-of-numbers-up-to-a-given-limit\">Exercise 3: Create a generator that generates the squares of numbers up to a given limit.</h3>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">square_generator</span>(<span class=\"hljs-params\">limit</span>):\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(limit):\n        <span class=\"hljs-keyword\">yield</span> i ** <span class=\"hljs-number\">2</span>\n\n<span class=\"hljs-comment\"># Using the generator to print squares of numbers up to a limit</span>\nlimit = <span class=\"hljs-number\">7</span>\nsquare_gen = square_generator(limit)\n<span class=\"hljs-keyword\">for</span> num <span class=\"hljs-keyword\">in</span> square_gen:\n    <span class=\"hljs-built_in\">print</span>(num)\n</code></pre>\n<h3 id=\"exercise-4-create-a-generator-that-generates-a-custom-countdown-sequence\">Exercise 4: Create a generator that generates a custom countdown sequence.</h3>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">countdown_generator</span>(<span class=\"hljs-params\">start</span>):\n    <span class=\"hljs-keyword\">while</span> start &gt;= <span class=\"hljs-number\">0</span>:\n        <span class=\"hljs-keyword\">yield</span> start\n        start -= <span class=\"hljs-number\">1</span>\n\n<span class=\"hljs-comment\"># Using the generator to print a countdown sequence</span>\nstart_count = <span class=\"hljs-number\">5</span>\ncountdown_gen = countdown_generator(start_count)\n<span class=\"hljs-keyword\">for</span> num <span class=\"hljs-keyword\">in</span> countdown_gen:\n    <span class=\"hljs-built_in\">print</span>(num)\n</code></pre>\n<p>These exercises demonstrate different use cases for generators in Python. You can run each code snippet to see how the generators produce sequences based on the specified criteria.</p>\n","markdown":"\n\n\n### Exercise 1: Create a generator that generates a Fibonacci sequence up to a given limit.\n\n```python\ndef fibonacci_generator(limit):\n    a, b = 0, 1\n    while a < limit:\n        yield a\n        a, b = b, a + b\n\n# Using the generator to print Fibonacci numbers up to a limit\nlimit = 50\nfib_gen = fibonacci_generator(limit)\nfor num in fib_gen:\n    print(num)\n```\n\n### Exercise 2: Create a generator that generates even numbers up to a given limit.\n\n```python\ndef even_number_generator(limit):\n    for i in range(0, limit, 2):\n        yield i\n\n# Using the generator to print even numbers up to a limit\nlimit = 20\neven_gen = even_number_generator(limit)\nfor num in even_gen:\n    print(num)\n```\n\n### Exercise 3: Create a generator that generates the squares of numbers up to a given limit.\n\n```python\ndef square_generator(limit):\n    for i in range(limit):\n        yield i ** 2\n\n# Using the generator to print squares of numbers up to a limit\nlimit = 7\nsquare_gen = square_generator(limit)\nfor num in square_gen:\n    print(num)\n```\n\n### Exercise 4: Create a generator that generates a custom countdown sequence.\n\n```python\ndef countdown_generator(start):\n    while start >= 0:\n        yield start\n        start -= 1\n\n# Using the generator to print a countdown sequence\nstart_count = 5\ncountdown_gen = countdown_generator(start_count)\nfor num in countdown_gen:\n    print(num)\n```\n\nThese exercises demonstrate different use cases for generators in Python. You can run each code snippet to see how the generators produce sequences based on the specified criteria.","slug":"Generators-Exercises","title":"Generators Exercises","section":"Generators","icon":"info-circle","filePath":"/home/runner/work/advanced-python/advanced-python/lessons/01-Generators/2-Generators-Exercises.md","nextSlug":"/advanced-python/lessons/Patterns/Patterns-Introduction","prevSlug":"/advanced-python/lessons/Generators/Generators"}},"__N_SSG":true}